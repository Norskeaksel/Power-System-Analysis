Task 1:
System matrix:
[[-15.   5.  10.   0.]
 [  5. -10.   5.   0.]
 [ 10.   5. -19.   4.]
 [  0.   0.   4.  -4.]]

Results:
Objective value:
 9.099999999999998
Power generation:
P0: 0.7999999999999996
P1: 0.0
P2: 1.2999999999999996
P3: 1.0
Power flow:
line 1-2: -0.7000000000000002
line 2-3: -1.0
line 0-1: 0.20000000000000018
line 0-2: -1.0

Task 2:
Disclamer: I don't know how to change the key names so we must count the constraints set in the code to see what the keys correspond to. Doing that, we find that
constraints 2-5 show the dual value of the P+L=B*Delta constraints and represents cost of increasing the load (marginal cost) in bus 0-3 respectivly.
Dual values: [4.0, 3.5, 3.0, 2.0]
We see that the dual values equal the operating costs in their buses except for bus 1 where the operating cost is 5, but the dual value is 3.5.
This means that we can increase the load in bus 1 without using it's generator.

Part 2:

Task 1:
The voltage angles in the load flow solutions using IMML are:
[-0.37 -0.45 -0.25  0.  ]
With these angles we get the following load flow solution:
[[-0.8  0.4 -1.2 -0. ]
 [-0.4 -0.9 -0.5 -0. ]
 [ 1.2  0.5  0.7 -1. ]
 [ 0.   0.   1.   1. ]]
From this matrix we see the net power generation/demand in each bus as well as the following power flows:
P01 = 0.3999999999999998
P02 = -1.2000000000000002
P12 = -0.49999999999999994
P23 = -0.9999999999999999
We see that the IMML approach gives an infeasible solution as line 0-2 is overloaded

Task 2 see file subproblem.py
We get the following flow change when the load change is: [ 0.28 -0.28  0.    0.  ] :
line 0-1  : 0.20000000000000018
line 0-2  : 0.08000000000000004
line 1-2  : -0.08000000000000006
line 2-3  : 0.0

Task 3:
Final solution:
Loads:
[-1.6, -0.9, -0.6, 0.0]
Generation:
[ 1.08 -0.28  1.3   1.  ]
Flows:
[[-0.52  0.6  -1.12 -0.  ]
 [-0.6  -1.18 -0.58 -0.  ]
 [ 1.12  0.58  0.7  -1.  ]
 [ 0.    0.    1.    1.  ]]
Line 0-1 = 0.6
Line 0-2 = -1.12
Line 1-2 = -0.58
Line 2-3 = -0.9999999999999999

Task 4:
Add constraint sum(model.P[i]-P[i])*dk_dp[i] for i in model.N) <=0

Task 5, base case:

Results:
Objective value:
 9.099999999999998
Power generation:
P0: 0.7999999999999996
P1: 0.0
P2: 1.2999999999999996
P3: 1.0
Power flow:
line 1-2: -0.7000000000000002
line 2-3: -1.0
line 0-1: 0.20000000000000018
line 0-2: -1.0

Task 5, New case:

Results:
Objective value:
 9.333333333333332
Power generation:
P0: 1.0333333333333328
P1: 0.0
P2: 1.0666666666666667
P3: 1.0
Power flow:
line 1-2: -0.46666666666666656
line 2-3: -1.0
line 0-1: 0.4333333333333331
line 0-2: -1.0
